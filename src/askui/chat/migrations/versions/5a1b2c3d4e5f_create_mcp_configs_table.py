"""create_mcp_configs_table

Revision ID: 5a1b2c3d4e5f
Revises: 37007a499ca7
Create Date: 2025-01-27 10:00:00.000000

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5a1b2c3d4e5f"
down_revision: Union[str, None] = "37007a499ca7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mcp_configs",
        sa.Column("id", sa.String(24), nullable=False, primary_key=True),
        sa.Column("workspace_id", sa.Uuid(), nullable=True, index=True),
        sa.Column("created_at", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("mcp_server", sa.JSON(), nullable=False),
    )

    # Add constraint to enforce MCP configuration limit
    op.execute("""
        CREATE TRIGGER check_mcp_config_limit
        BEFORE INSERT ON mcp_configs
        WHEN (
            SELECT COUNT(*) FROM mcp_configs
            WHERE workspace_id = NEW.workspace_id OR workspace_id IS NULL
        ) >= 100
        BEGIN
            SELECT RAISE(ABORT, 'MCP configuration limit reached. You may only have 100 MCP configurations. You can delete some MCP configurations to create new ones.');
        END;
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("mcp_configs")
    # ### end Alembic commands ###
